import{_ as a,r as e,c as l,a as i,b as s,d as t,w as p,e as c,o}from"./app-DOSvOHmV.js";const r={},d=c(`<h1 id="快速上手指南" tabindex="-1"><a class="header-anchor" href="#快速上手指南"><span>快速上手指南</span></a></h1><p>带你一文速通 syncfile 之论文篇。</p><h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><p>syncfile 是 Elementary (前元素云) 开源软件团队的成员 OriginalFactor 独立编写的 Python 脚本程序。 该程序能够较为简单的在设备间<strong>克隆</strong>文件。是替代SMB协议的可选方案。</p><p>本方案适用于多个小文件的克隆，大文件克隆性能不佳。（取决于服务端侧使用的HTTP服务器解决方案）</p><h2 id="技术特征" tabindex="-1"><a class="header-anchor" href="#技术特征"><span>技术特征</span></a></h2><p>适用于互联网中的克隆，允许自定义DoH解析器、自定义IP、负载均衡等功能。 使用<code>httpx</code>网络模块，比<code>requests</code>性能更好。</p><h2 id="实现原理" tabindex="-1"><a class="header-anchor" href="#实现原理"><span>实现原理</span></a></h2><p>在被克隆（称为“服务端”）侧，根据用户确立的规则文件<code>config.json</code>，生成索引文件<code>client.json</code>，包含目标路径、文件路径、文件SHA512（前1MB摘要）。</p><p>服务端通过三方HTTP服务器提供服务，客户端根据配置文件<code>Cconfig.json</code>，拉取服务端索引，并根据索引拉取文件。</p><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><p>想要安装 syncfile ？您仅需要一个 Python 环境以及一个 pip。 <a href="https://github.com/pyenv/pyenv?tab=readme-ov-file#installation" target="_blank" rel="noopener noreferrer">推荐的Python POSIX环境</a></p><p>对于Windows，仅需要<a href="https://www.python.org/downloads/windows/" target="_blank" rel="noopener noreferrer">安装Python</a>，并勾选“Add to PATH”以及“Pip”。</p><p>然后，您需要打开一个终端，可以是<code>bash</code>、<code>zsh</code>、<code>powershell</code>等，亦或者<code>cmd.exe</code>。 输入如下命令：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 对于以推荐的方式安装的Python</span></span>
<span class="line">pip <span class="token function">install</span> syncfile</span>
<span class="line"><span class="token comment"># 对于Linux/Unix系统，使用系统Python3</span></span>
<span class="line">python3 <span class="token parameter variable">-m</span> pip <span class="token function">install</span> syncfile</span>
<span class="line"><span class="token comment"># 确保安装了Pip</span></span>
<span class="line">python3 <span class="token parameter variable">-m</span> ensurepip</span>
<span class="line"><span class="token comment"># 使用系统包管理器</span></span>
<span class="line"><span class="token comment"># debian</span></span>
<span class="line"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> python3-pip</span>
<span class="line"><span class="token comment"># archlinux</span></span>
<span class="line"><span class="token function">sudo</span> pacman <span class="token parameter variable">-Sy</span> python3-pip</span>
<span class="line"><span class="token comment"># redhat</span></span>
<span class="line"><span class="token function">sudo</span> yum <span class="token function">install</span> python3-pip</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="上手" tabindex="-1"><a class="header-anchor" href="#上手"><span>上手</span></a></h2><p>syncfile常规使用非常简单，仅有两个功能。</p><h3 id="服务端" tabindex="-1"><a class="header-anchor" href="#服务端"><span>服务端</span></a></h3><p>解释：被“克隆”的机器。提供HTTP服务，故称为“服务端”</p><p>步骤：</p><ol><li>准备好需要被“克隆”的资源文件（最好集中在同一目录，推荐目录结构如下所示）</li></ol><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">/ # 项目目录</span>
<span class="line">| - resources</span>
<span class="line">  | - someResource.txt</span>
<span class="line">| - config.json</span>
<span class="line">| - client.json # 自动生成</span>
<span class="line"># 不建议有其他文件，该目录需要被整个开放到网络中，没有密码。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>编写<code>config.json</code>文件，如下</li></ol><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre class="language-json"><code><span class="line"><span class="token comment">// 本文件为示例，请根据实际需求修改</span></span>
<span class="line"><span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">[</span><span class="token string">&quot;resources&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;resources&quot;</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>在终端运行如下指令</li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">python <span class="token parameter variable">-m</span> syncfile.server</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="4"><li>运行一个HTTP服务器，将本目录暴露在网络中，例：</li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">python <span class="token parameter variable">-m</span> http.server <span class="token number">8080</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="客户端" tabindex="-1"><a class="header-anchor" href="#客户端"><span>客户端</span></a></h3><p>解释： “克隆”的机器，访问HTTP服务器，故称“客户端”</p><p>步骤：</p><ol><li>在需要同步的目录，新建<code>Cconfig.json</code>文件，示例：</li></ol><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre class="language-json"><code><span class="line"><span class="token comment">// 基本的配置文件，更多可选参数在文档中</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;requestURL&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://127.0.0.1:8080/&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>打开终端，运行如下指令：</li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">python <span class="token parameter variable">-m</span> syncfile.client</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="3"><li>成功同步远端<code>resources</code>目录到本地同名目录！</li></ol><h2 id="卸载" tabindex="-1"><a class="header-anchor" href="#卸载"><span>卸载</span></a></h2><p>对于任何系统，仅需使用pip包管理器移除，如：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token operator">&lt;</span>python<span class="token operator">&gt;</span> <span class="token parameter variable">-m</span> pip uninstall syncfile</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>其中<code>&lt;python&gt;</code>是您的Python解释器路径。</p><h2 id="更多" tabindex="-1"><a class="header-anchor" href="#更多"><span>更多</span></a></h2><p>您可以访问<a href="https://github.com/ECSDevs/SyncFile" target="_blank" rel="noopener noreferrer">Github</a>获取更多信息、反馈Bugs、参与讨论等。</p>`,42);function u(h,m){const n=e("RouteLink");return o(),l("div",null,[d,i("p",null,[s("如果您想要寻找更多的官方中文参考文档，请查看"),t(n,{to:"/reference/introduction.html"},{default:p(()=>[s("参考文档")]),_:1})])])}const b=a(r,[["render",u],["__file","quick-guide.html.vue"]]),g=JSON.parse('{"path":"/quick-guide.html","title":"快速上手指南","lang":"zh-CN","frontmatter":{"sidebar":"heading","sidebarDepth":2},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"技术特征","slug":"技术特征","link":"#技术特征","children":[]},{"level":2,"title":"实现原理","slug":"实现原理","link":"#实现原理","children":[]},{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":2,"title":"上手","slug":"上手","link":"#上手","children":[{"level":3,"title":"服务端","slug":"服务端","link":"#服务端","children":[]},{"level":3,"title":"客户端","slug":"客户端","link":"#客户端","children":[]}]},{"level":2,"title":"卸载","slug":"卸载","link":"#卸载","children":[]},{"level":2,"title":"更多","slug":"更多","link":"#更多","children":[]}],"git":{"updatedTime":1719838470000,"contributors":[{"name":"originalfactor","email":"2438926613@qq.com","commits":2}]},"filePathRelative":"quick-guide.md"}');export{b as comp,g as data};
